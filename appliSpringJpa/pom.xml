<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.m2i.tp</groupId>
	<artifactId>appliSpringJpa</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>appliSpringJpa</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- sous eclipse , windows preferences general workspace text encoding utf8  -->
	</properties>
	<dependencies>
	
	
	<!-- lombok sert à générer automatiquement les get/set et toString() 
         pas de configuration supplémentaire absolument nécessaire dans intellij
         pour que lombok fonctionne bien dans eclipse:
           1) repérer le chemin menant à lombok.jar
              $HOME\.m2\repository\org\projectlombok\lombok\1.18.22\lombok.jar
           2) effectuer un double click sur lombok.jar 
              (ou bien java -jar lombok.jar)
           3) spécifier si besoin le chemin menant à eclipse
           4) cliquer sur "Install" de façon à modifier eclipse.ini
           5) arrêter et redémarrer eclipse
           6) activer le menu Project/clean
      -->
	   <dependency>
    		<groupId>org.projectlombok</groupId>
    		<artifactId>lombok</artifactId>
    		<version>1.18.22</version>
    		<scope>provided</scope>
	  </dependency>
	   
	   
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
	<!-- avec dependances indirectes : jakarta-persistence-api (jpa)
	    et hibernate-core --> 	
		
	<!-- dependance complémentaire pour cache second niveau -->	
		<dependency>
    		<groupId>org.hibernate</groupId>
    		<artifactId>hibernate-jcache</artifactId>
    		<!-- <version>5.6.5.Final<version> -->
		</dependency>
		
		<!-- Ehcache 3.x -->
    <dependency>
      <groupId>org.ehcache</groupId>
      <artifactId>ehcache</artifactId>
      <!-- <version>3.9.9</version> -->
    </dependency>
    
    <dependency> 
    	<groupId>org.springframework.boot</groupId> 
    	<artifactId>spring-boot-starter-validation</artifactId> 
	</dependency>
    <!-- with hibernate-validator as default implementation of javax.validation/validation-api-->	
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
    
     
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
    			<artifactId>maven-resources-plugin</artifactId>
    			<version>3.0.2</version>
    		    <!-- nb: version 3.2.0 avec bug a priori -->	
			</plugin>
		</plugins>
	</build>

</project>
